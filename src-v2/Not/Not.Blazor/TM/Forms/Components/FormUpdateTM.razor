@using Not.Blazor.Mud.Components
@using Not.Services;
@using Not.Blazor.Components;
@using Not.Blazor.Forms;
@using Not.Blazor.Navigation;

@inherits NotComponent
@typeparam T;
@typeparam TForm where TForm : FormTM<T>;

<MudContainer Class="not-page-mid-width">
    <NotDynamic @ref="_form" T="T" TForm="TForm" Model="Model" />
    
    <MudStack Row="true" Class="mt-4">
        <NotButtonUpdate OnClick="Update" />

        <NotButtonBack OnClick="NavigateBack" /> 
    </MudStack>
</MudContainer>

@code {
    NotDynamic<T, TForm> _form = default!;

    [Inject]
    ICrumbsNavigator _navigator { get; set; } = default!;
    [Inject]
    IUpdateBehind<T> _behind { get; set; } = default!;

    [Parameter]
    public T Model { get; set; } = default!;

    async Task Update()
    {
        try
        {
            await _behind.Update(Model);
            NavigateBack();
        }
        catch (DomainException domainException)
        {
            await _form.Instance.AddValidationError(domainException.Property, domainException.Message);
        }
    }

    void NavigateBack()
    {
        _navigator.NavigateBack();
    }
}
