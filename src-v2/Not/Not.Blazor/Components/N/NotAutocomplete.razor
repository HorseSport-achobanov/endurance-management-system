@using Not.Blazor.Components
@using Not.Blazor.CRUD.Forms.Validation
@using Not.Blazor.Components.Base

@typeparam T;
@inherits BindableValueComponent<T>;
@implements IMudBaseInputWrapper<T>

<MudAutocomplete T="T"
                 @ref="MudBaseInput"
                 @bind-Value="Value"
                 CoerceText="true"
                 SearchFunc="(a, b) => Search(a)"
                 @onclick="HandleOnClick"
                 Class="@Class"
                 Label="@Localizer.Get(Label)" />

@code {
    [Parameter]
    public Func<string, Task<IEnumerable<T>>> Search { get; set; } = default!;
    [Parameter]
    public bool ResetValueOnClick { get; set; } = true;
    [Parameter]
    public string Label { get; set; } = "";

    public MudBaseInput<T> MudBaseInput { get; private set; } = default!;

    private void HandleOnClick(MouseEventArgs _)
    {
        if (ResetValueOnClick)
        {
            Value = default(T);
        }
    }
}
