@using NTS.Domain.Setup.Entities
@using NTS.Judge.Blazor.Setup.EnduranceEvents.Contestants
@using NTS.Judge.Blazor.Setup.EnduranceEvents.Phases
@using Not.Blazor.CRUD.Forms.Components
@using Not.Blazor.Navigation
@using Not.Blazor.CRUD.Lists

@attribute [Route(COMPETITION_UPDATE)]
@inherits NComponent

<NContent Title="Configure Competition" HasContent="Competition != null" EmptyMessage="Competition does not exist">

    <Main>
        <NGrid Spacing="8">
            
            <MudItem xs="12">
                <NUpdateContainer T="CompetitionFormModel" TForm="CompetitionForm" Model="Competition" />
            </MudItem>

            <MudItem xs="6">
                @* //TODO: behind creates multiple phases at once. *@
                <CrudList T="Phase" TModel="PhaseFormModel" TForm="PhaseForm" UpdateRoute="@PHASE_UPDATE" ParentId="Competition!.Id"/>
            </MudItem>

            <MudItem xs="6">
                @* //TODO: behind creates multiple contestants at once. *@
                <CrudList T="Participation" TModel="ParticipationFormModel" TForm="ParticipationForm" 
                    UpdateRoute="@PARTICIPATION_UPDATE" ParentId="Competition!.Id" />
            </MudItem>

        </NGrid>
    </Main>

</NContent>

@code {
    CompetitionFormModel? Competition { get; set; } = default!;
    [Inject]
    ICrumbsNavigator Navigator { get; set; } = default!;

    protected override void OnInitialized()
    {
        Competition = Navigator.ConsumeParameter<CompetitionFormModel>();
    }
}
