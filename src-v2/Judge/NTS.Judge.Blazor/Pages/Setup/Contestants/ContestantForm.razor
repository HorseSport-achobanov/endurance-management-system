@using NTS.Domain.Setup.Entities;
@using NTS.Judge.Setup.Competitions
@using Not.Blazor.Forms;
@using Not.Blazor.TM.Forms;
@using Not.Blazor.TM.Forms.Components;
@using Not.Extensions;

@inherits NotForm<Contestant>;

<EditForm Model="_model">
    <MudSwitch T="bool" @ref="_unrankedField" @bind-Value="_model.Unranked" Label="@Localizer.Get("Unranked")"
               ThumbIcon="@(_model.Unranked==true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)"
               ThumbIconColor="@(_model.Unranked==true ? Color.Success : Color.Error)" />
    <MudSwitch T="bool" @bind-Value="_overrideStartTime" Label="@Localizer.Get("Override Start Time")"
               ThumbIcon="@(_overrideStartTime==true ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)"
               ThumbIconColor="@(_overrideStartTime==true ? Color.Success : Color.Error)" />
    @if (_overrideStartTime)
    {
        <MudTimePicker DisableToolbar="true" @ref="_timeField" @bind-Time="_model.StartTimeOverride" Label="@Localizer.Get("Start Time")" />
    }
</EditForm>

@code {
    private MudPicker<TimeSpan?> _timeField = default!;
    private MudBooleanInput<Boolean> _unrankedField = default!;
    private ContestantFormModel _model { get; set; } = new();
    private Boolean _overrideStartTime = false;

    public override void RegisterValidationInjectors()
    {
        RegisterInjector(nameof(_model.StartTimeOverride), () => _timeField);
    }

    public override void SetUpdateModel(Contestant contestant)
    {
        _model = new ContestantFormModel(contestant);
    }

    public override Contestant SubmitCreate()
    {
        DateTimeOffset? newStartTimeOffset = _model.StartTimeOverride.ToDateTimeOffset();
        return Contestant.Create(newStartTimeOffset,_model.Unranked);
    }

    public override Contestant SubmitUpdate()
    {
        DateTimeOffset? newStartTimeOffset = _model.StartTimeOverride.ToDateTimeOffset();
        return Contestant.Update(_model.Id ,newStartTimeOffset,_model.Unranked);
    }
}