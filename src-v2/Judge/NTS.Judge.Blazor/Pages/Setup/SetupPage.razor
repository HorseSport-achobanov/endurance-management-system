@using NTS.Domain.Setup.Entities;
@using NTS.Judge.Blazor.Pages.Setup.Events;
@using NTS.Judge.Blazor.Ports
@using Not.Blazor.Components;
@using Not.Blazor.Forms
@using NTS.Judge.Blazor.Pages.Demos;
@using Not.Blazor.Print

@attribute [Route(SETUP_PAGE)]
@inherits NotComponent

<NotTitle Content="Setup" />

<MudPaper Elevation="2" Class="pa-10">
    @if (_event == null)
    {
        <NotButtonCreate OnClick="RenderCreate" />
    }
    else
    {
        <EventPage />
    }
    <MudButton OnClick="_print.Print">Print</MudButton>
</MudPaper>

@code {
    private Event? _event;
    [Inject]
    private IFormNavigator<Event, EventForm> _formNavigator { get; set; } = default!;
    [Inject]
    private INotBehind<Event> _behind { get; set; } = default!;
    [Inject]
    private IPrintInterop _print { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await Init();
    }

    private async Task Init()
    {
        _event = await _behind.Read(default);
    }

    private async Task RenderCreate()
    {
        await _formNavigator.Create();
        await Init();
    }
}