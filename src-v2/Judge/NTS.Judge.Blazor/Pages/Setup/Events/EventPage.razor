@using NTS.Domain.Setup.Entities
@using NTS.Judge.Blazor.Pages.Setup.Events
@using NTS.Judge.Blazor.Pages.Setup.Laps
@using NTS.Judge.Blazor.Pages.Setup.Officials
@using NTS.Judge.Blazor.Pages.Setup.Competitions
@using NTS.Judge.Blazor.Pages.Setup.Contestants
@using Not.Blazor.TM
@using Not.Blazor.TM.Forms.Components

@inherits NotComponent

<MudPaper Elevation="0" Class="pa-6">
    <NotH2>Edit Event</NotH2>
    <NotFormUpdate T="Event" TForm="EventForm" Entity="_event" UpdateAction="_behind.Update" />
</MudPaper>

<MudDivider />

<MudPaper Class="d-flex justify-space-between pr-6" Elevation="0">
    <NotSetList Name="Officials" T="Official" TForm="OfficialForm" UpdateRoute="@OFFICIAL_UPDATE" />
    <MudDivider Vertical="true" FlexItem="true" />
    <NotSetList Name="Laps" T="Lap" TForm="LapForm" UpdateRoute="@LAP_UPDATE" />
</MudPaper>

<MudDivider />

<MudPaper Elevation="0">
   <CompetitionGrid />
</MudPaper>


@code {
    private Event _event = default!;
    [Inject]
    private INotBehind<Event> _behind { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var entity = await _behind.Read(default);
        GuardHelper.ThrowIfDefault(entity);

        await _behind.Initialize(entity.Id);
        _event = entity;
    }
}