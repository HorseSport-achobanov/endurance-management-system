@using NTS.Domain.Setup.Entities
@using NTS.Judge.Blazor.Pages.Setup.Events
@using NTS.Judge.Blazor.Pages.Setup.Officials
@using NTS.Judge.Blazor.Pages.Setup.Competitions
@using Not.Blazor.TM
@using Not.Blazor.TM.Forms.Components
@using Not.Blazor.TM.Pages

@attribute [Route(ENDURANCE_EVENT_PAGE)]
@inherits NotComponent

<NotPage Title="Configure Endurance Event" HasContent="_event != null" EmptyMessage="Endurance Event is not created yet :)">

    <EmptyContent>
        <NotButtonCreate OnClick="OpenCreateForm" />
    </EmptyContent>

    <Main>
        <NotFormUpdate T="Event" TForm="EventForm" Entity="_event!" UpdateAction="_behind.Update" />
    </Main>

    <Main2>
        <NotGrid Spacing="8">

            <MudItem xs="6">
                <NotSetList T="Competition" TForm="CompetitionForm" UpdateRoute="@COMPETITION_UPDATE" />
            </MudItem>

            <MudItem xs="6">
                <NotSetList T="Official" TForm="OfficialForm" UpdateRoute="@OFFICIAL_UPDATE" />
            </MudItem>

        </NotGrid>
    </Main2>

</NotPage>

@code {
    private Event? _event;

    [Inject]
    private INotBehind<Event> _behind { get; set; } = default!;
    [Inject]
    private IFormNavigator<Event, EventForm> _formNavigator { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await InitializeEnduranceEvent();
    }

    private async Task OpenCreateForm()
    {
        await _formNavigator.Create();
        await InitializeEnduranceEvent();
    }

    async Task InitializeEnduranceEvent()
    {
        _event = await _behind.Initialize(0);
    }
}