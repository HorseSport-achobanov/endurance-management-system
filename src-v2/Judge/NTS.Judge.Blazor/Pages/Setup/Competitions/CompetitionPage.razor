@using NTS.Domain.Setup.Entities;
@using Not.Blazor.Components;
@using Not.Blazor.Navigation;
@using Not.Blazor.TM.Forms.Components

@* @attribute [Route(COMPETITION_PAGE)] *@
@inherits NotComponent


<MudPaper>
    <NotH2>@Localizer.Get(" Update Competition")</NotH2>
 
     <NotFormUpdate T="Competition" TForm="CompetitionForm" Entity="_navigator.ConsumeParameter<Competition>()" UpdateAction="Update" />

    }
</MudPaper>

@code {
    [Inject]
    private INotBehindParent<Competition> _parentBehind { get; set; } = default!;
    // [Inject]
    // private INotBehind<Event> _behind { get; set; } = default!;
    [Inject]
    private INavigator _navigator { get; set; } = default!;

    Event Parent { get; set; } = default!;


    // protected override async Task OnInitializedAsync()
    // {
    //     Parent = _behind.RootParent;
    //     int count = Parent.Competitions.Count;
    //     bool any = Parent.Competitions.Count > 0;
    // }

    protected async Task Create(Competition competition)
    {
        await _parentBehind.Create(competition);
        _navigator.NavigateTo(SETUP_PAGE);
    }

    protected async Task Update(Competition competition)
    {
        await _parentBehind.Update(competition);
        _navigator.NavigateTo(SETUP_PAGE);
    }
}