@using NTS.Domain.Setup.Entities;
@using Not.Blazor.Components;
@using Not.Blazor.Navigation;
@using Not.Blazor.TM.Forms.Components
@using NTS.Judge.Blazor.Pages.Setup.Contestants

@attribute [Route(COMPETITION_PAGE)]
@inherits NotComponent


    @if (_parentBehind.Children.Any())
    {
        <div>ГЪЗЕ</div>
       @*  <CompetitionGrid/>
        <ContestantPage /> *@
    }
    else
    {
        <MudPaper Elevation="0">
            <div class="pa-6">
                <NotH2>@Localizer.Get("Competitions")</NotH2>
                <NotButtonCreate OnClick="_competitionNavigator.Create" Class="toolbar-button" />
                <p>@Localizer.Get("No competitions have been created for this event.")</p>
            </div>
        </MudPaper>
    }

@code {
    private Competition _comp { get; set; } = default!;
    [Inject]
    private INotBehindWithChildren<Competition> _competitionWithChildren { get; set; } = default!;
    [Inject]
    private INotBehindParent<Competition> _parentBehind { get; set; } = default!;
    [Inject]
    private IFormNavigator<Competition, CompetitionForm> _competitionNavigator { get; set; } = default!;
    [Inject]
    private INavigator _navigator { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _comp = _navigator.ConsumeParameter<Competition>();
        await _competitionWithChildren.Initialize(_comp.Id);
        //return Task.CompletedTask;
    }

    protected async Task Update(Competition competition)
    {
        await _parentBehind.Update(competition);
        _navigator.NavigateTo(SETUP_PAGE);
    }
}