@using NTS.Domain.Setup.Entities;
@using NTS.Judge.Blazor.Pages.Setup.Phases
@using NTS.Judge.Setup.Competitions
@using Not.Blazor.Components;
@using Not.Blazor.Navigation;
@using Not.Blazor.TM
@using Not.Blazor.TM.Forms.Components
@using NTS.Judge.Blazor.Pages.Setup.Contestants
@using Not.Blazor.TM.Pages

@attribute [Route(COMPETITION_UPDATE)]
@inherits NotComponent

<NotPage Title="Configure Competition" HasContent="_competition != null" EmptyMessage="Competition does not exist">

    <Main>
        <NotGrid Spacing="8">
            
            <MudItem xs="12">
                <FormUpdateTM T="CompetitionFormModel" TForm="CompetitionForm" Model="_competition" />
            </MudItem>

            <MudItem xs="6">
                @* //TODO: behind creates multiple phases at once. *@
                <CrudList T="Phase" TModel="PhaseFormModel" TForm="PhaseForm" UpdateRoute="@PHASE_UPDATE" ParentId="_competition!.Id"/>
            </MudItem>

            <MudItem xs="6">
                @* //TODO: behind creates multiple contestants at once. *@
                <CrudList T="Contestant" TModel="ContestantFormModel" TForm="ContestantForm" UpdateRoute="@CONTESTANT_UPDATE" ParentId="_competition!.Id" />
            </MudItem>

        </NotGrid>
    </Main>

</NotPage>

@code {
    CompetitionFormModel? _competition { get; set; } = default!;
    [Inject]
    ICrumbsNavigator _navigator { get; set; } = default!;

    protected override void OnInitialized()
    {
        _competition = _navigator.ConsumeParameter<CompetitionFormModel>();
    }
}
