@using NTS.Domain.Core.Objects
@using NTS.Judge.Blazor.Ports

@inherits NotComponent

<NotH1>@Localizer.Get("Ranklist")</NotH1>

@if (_behind.Ranklist == null)
{
    <MudPaper>
        <MudText>The event is not started yet</MudText>
    </MudPaper>
}
else
{
    <NotH2>@_behind.Ranklist.Title</NotH2>

    <RanklistColumns>
        <One>
            <MudText Typo="Typo.subtitle2">
                @Localizer.Get("Rank")
            </MudText>
        </One>
        <Two>
            <MudText Typo="Typo.subtitle2">
                @Localizer.Get("Tandem")
            </MudText>
        </Two>
        <Four>
            <MudText Typo="Typo.subtitle2">
                @Localizer.Get("Arrive")
            </MudText>
        </Four>
        <Five>
            <MudText Typo="Typo.subtitle2">
                @Localizer.Get("Avr Speed")
            </MudText>
        </Five>
        <Six>
            <MudText Typo="Typo.subtitle2">
                @Localizer.Get("Loop")
            </MudText>
        </Six>
        <Seven>
            <MudText Typo="Typo.subtitle2">
                @Localizer.Get("Recovery")
            </MudText>
        </Seven>
        <Eight>
            <MudText Typo="Typo.subtitle2">
                @Localizer.Get("Total")
            </MudText>
        </Eight>
    </RanklistColumns>

    @for (var i = 0; i < _behind.Ranklist.Count; i++)
    {
        var entry = _behind.Ranklist[i];
        <RanklistRow Entry="entry" Index="i" />
        if (i != _behind.Ranklist.Count - 1)
        {
           <MudDivider />
        }
    }
}

@code {
    [Inject]
    IRanklistBehind _behind { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await _behind.Initialize();
    }
}
