@using NTS.Domain.Core.Objects
@using NTS.Domain.Objects
@using NTS.Domain.Setup.Entities
@using NTS.Judge.Blazor.Ports
@using System.Collections
@using Not.Blazor.TM
@using Not.Blazor.TM.Models
@using Not.Extensions

@inherits NotComponent

@if (Items.Count() == 0)
{
    <MudText Typo="Typo.body1">Start history is empty.</MudText>
}
else
{
    <MudTabs @ref="@Tabs" PanelClass="px-4 py-6" Elevation="4" Rounded ApplyEffectsToContainer>
        @foreach (var tab in UserTabs)
        {
            <MudTabPanel ID="@tab.Id" Text="@tab.Label">
                <ChildContent>
                    <MudDataGrid @ref="dataGrid" MultiSelection="true" Items="@Items.Where(g=>g.TotalDistance == tab.Key)" Dense="true"
                                 Hideable="true" Groupable="true" GroupExpanded="true">
                        <ToolBarContent>
                            <MudDivider DividerType="DividerType.FullWidth" Absolute></MudDivider>
                            <th class="group-header">Participant</th>
                            <MudDivider DividerType="DividerType.FullWidth" Absolute></MudDivider>
                        </ToolBarContent>
                        <Columns>
                            <PropertyColumn T="Start" TProperty="int" Property="x=>x.Number" Grouping GroupBy="_groupBy" Hidden>
                                <GroupTemplate>
                                    <span style="font-weight:bold"> @FormatGroup(context.Grouping.Key.ToString())  </span>
                                </GroupTemplate>
                            </PropertyColumn>
                            <PropertyColumn T="Start" TProperty="int" Property="x=>x.PhaseNumber" Title="Phase"></PropertyColumn>
                            <PropertyColumn T="Start" TProperty="double" Property="x=>x.Distance"></PropertyColumn>
                            <PropertyColumn T="Start" TProperty="Timestamp" Property="x=>x.StartAt" Title="Start Time"></PropertyColumn>
                        </Columns>
                        <PagerContent>
                            <MudDataGridPager PageSizeOptions="[15,30]" T="Start" />
                        </PagerContent>
                    </MudDataGrid>
                </ChildContent>
            </MudTabPanel>
        }
    </MudTabs>

}

@code{
    [Parameter]
    public IEnumerable<Start> Items { get; set; } = new List<Start>();

    MudDataGrid<Start> dataGrid = default!;
    MudTabs Tabs = default!;
    List<TabModel> UserTabs = new();
    int UserIndex;

    protected override void OnParametersSet()
    {
        foreach (var start in Items)
        {
            TabModel tab = new TabModel();
            tab.Label = $"{start.TotalDistance} {@Localizer.Get("KM")}";
            tab.Key = start.TotalDistance;
            tab.Id = Guid.NewGuid();
            if (!UserTabs.Any(t => t.Label == tab.Label))
            {
                UserTabs.Add(tab);
            }
        }
    }

    Func<Start, object> _groupBy = x =>
    {
        var tuple = (x.Number, x.Athlete);
        return tuple as object;
    };

    public string FormatGroup(string groupKey)
    {
        return groupKey.Replace(")", "").Replace("(", Localizer.Get("#")).Replace(",", " | ");
    }
}
<style>
    .group-header{
        display:flex;
        justify-content:flex-start;
        align-items: center;
        width: 100%;
        height:38.8px;
        padding-left:16px;
        background-color:rgb(245, 245, 245);
    }
    .mud-toolbar{
        height:38.8px !important;
    }
    .mud-table-toolbar{
        padding-left: 0px !important;
        padding-right: 0px !important;
    }
</style>