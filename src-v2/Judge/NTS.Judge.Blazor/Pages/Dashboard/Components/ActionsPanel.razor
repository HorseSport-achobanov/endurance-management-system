@using NTS.Domain.Core.Aggregates.Participations
@using NTS.Domain.Objects
@using NTS.Domain.Core.Entities
@using NTS.Judge.Blazor.Pages.Dashboard.Components.Actions
@using NTS.Judge.Blazor.Ports
@using NTS.Judge.Blazor.Enums
@using Not.Structures
@using Not.Blazor.TM
@using Not.Events

@inherits NotComponent

<h3>Actions</h3>

@{
    BeforeRender();
}

<MudPaper Class="d-flex flex-column half-width" Elevation="0">
    <ManualTimeSnapshot />

    <InspectionsPanel  ReinspectionToggled="@_reinspectionRequested" RequiredInspectionToggled="@_requiredInspectionRequested" />

    <EliminationsPanel/>
</MudPaper>

@code {
    [Inject]
    IParticipationBehind _participationBehind { get; set; } = default!;
    Participation _selectedParticipation { get; set; } = default!;
    NotQualified _notQualified { get; set; } = default!;
    Phase _currentPhase { get; set; } = default!;
    private bool _reinspectionRequested = false;
    private bool _requiredInspectionRequested = false;

    protected override async Task OnInitializedAsync()
    {
        await Observe(_participationBehind);
    }

    public void BeforeRender()
    {
        _selectedParticipation = _participationBehind.SelectedParticipation!;
        _currentPhase = _selectedParticipation.Phases.Current;
        _reinspectionRequested = _currentPhase.IsReinspectionRequested;
        _requiredInspectionRequested = _currentPhase.IsRIRequested;
    }
}
