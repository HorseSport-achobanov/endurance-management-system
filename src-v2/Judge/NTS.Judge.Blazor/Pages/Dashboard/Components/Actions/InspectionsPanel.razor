@using NTS.Domain.Core.Aggregates.Participations
@using NTS.Judge.Blazor.Ports
@using Not.Blazor.TM

@inherits NotComponent

<MudPaper Class="d-flex flex-row mb-4" Elevation="0">
    <NotSwitch Label="Represent" Value="_represent" ValueChanged="ToggleReinspection" />

    <NotSwitch Label="Require Inspection" Value="_requireInspection" ValueChanged="ToggleRequiredInspection" />
</MudPaper>

@code {
    [Inject]
    IParticipationBehind _participationBehind { get; set; } = default!;
    Participation _selectedParticipation => _participationBehind.SelectedParticipation!;
    Phase? _currentPhase => _selectedParticipation.Phases.Current;
    bool _represent => _currentPhase?.IsReinspectionRequested ?? false;
    bool _requireInspection => _currentPhase?.IsRIRequested ?? false;

    protected override async Task OnInitializedAsync()
    {
        await Observe(_participationBehind);
    }

    async Task ToggleReinspection(bool value)
    {
        await _participationBehind.RequestRepresent(value);
    }

    async Task ToggleRequiredInspection(bool value)
    {
        await _participationBehind.RequireInspection(value);
    }
}
