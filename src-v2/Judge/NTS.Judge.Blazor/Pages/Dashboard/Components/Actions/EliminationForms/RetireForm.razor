@using NTS.Domain.Core.Aggregates.Participations
@using NTS.Judge.Blazor.Enums
@using NTS.Judge.Blazor.Ports
@inherits NotComponent

<MudButton Class="mt-4 one-third-width" Variant="Variant.Filled" Color="Color.Primary" OnClick="Update">
    @Localizer.Get(SubmitButtonMessage)
</MudButton>

@code {
    [Inject]
    IParticipationBehind _participationBehind { get; set; } = default!;
    [Parameter]
    public Retired? Retired { get; set; }
    private string SubmitButtonMessage = "Save";

    protected override void OnParametersSet()
    {
        if (Retired != null)
        {
            SubmitButtonMessage = "Restore Qualification";
        }
    }

    public async Task Update()
    {
        Participation? participation = _participationBehind.SelectedParticipation;
        var tandemNumber = participation!.Tandem.Number;
        if (participation.IsNotQualified)
        {
            await _participationBehind.RestoreQualification(tandemNumber);
        }
        else
        {
            await _participationBehind.RevokeQualification(tandemNumber, QualificationRevokeType.Retire);
        }
    }
}
