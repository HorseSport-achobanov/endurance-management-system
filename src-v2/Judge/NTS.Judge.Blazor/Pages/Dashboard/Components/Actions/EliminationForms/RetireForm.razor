@using NTS.Domain.Core.Aggregates.Participations
@using NTS.Judge.Blazor.Enums
@using NTS.Judge.Blazor.Ports
@inherits NotComponent

<MudButton Class="mt-4 one-third-width" Variant="Variant.Filled" Color="Color.Primary" OnClick="Revoke">
    @Localizer.Get("Eliminate")
</MudButton>

<MudButton Class="mt-4 one-third-width" Variant="Variant.Filled" Color="Color.Primary" OnClick="Restore">
    @Localizer.Get("Restore")
</MudButton>

@code {
    [Inject]
    IParticipationBehind _participationBehind { get; set; } = default!;
    [Parameter]
    public Retired? Retired { get; set; }
    [Parameter]
    public EventCallback OnSubmission { get; set; }

    public async Task Revoke()
    {
        Participation? participation = _participationBehind.SelectedParticipation;
        var tandemNumber = participation!.Tandem.Number;
        await _participationBehind.RevokeQualification(tandemNumber, QualificationRevokeType.Retire);
    }

    public async Task Restore()
    {
        Participation? participation = _participationBehind.SelectedParticipation;
        var tandemNumber = participation!.Tandem.Number;
        await OnSubmission.InvokeAsync();
        await _participationBehind.RestoreQualification(tandemNumber);
    }
}
