@using NTS.Domain.Core.Aggregates.Participations
@using NTS.Judge.Blazor.Enums
@using NTS.Judge.Blazor.Pages.Dashboard.Components.Actions.EliminationForms.Components
@using NTS.Judge.Blazor.Ports
@using System.Diagnostics
@using Not.Notifier

@inherits EliminationForm

<MudPaper Elevation="1" Class="pa-2">
    <EliminationFormReason @bind-Value="_reason" />

    <EliminationFormActions Form="this" />
</MudPaper>

@code {
    string? _reason;

    [Parameter]
    public FinishedNotRanked? FinishedNotRanked { get; set; } = default!;

    protected override void OnParametersSet()
    {
        _reason = FinishedNotRanked?.Complement;
    }

    internal override async Task Eliminate()
    {
        if (_reason == null)
        {
            NotifyHelper.Warn("Reason is required");
            return;
        }
        await _participationBehind.FinishNotRanked(_reason);
    }
}