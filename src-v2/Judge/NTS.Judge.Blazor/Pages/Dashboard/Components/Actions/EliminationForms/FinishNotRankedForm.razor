@using NTS.Domain.Core.Aggregates.Participations
@using NTS.Judge.Blazor.Enums
@using NTS.Judge.Blazor.Ports
@using System.Diagnostics
@inherits NotComponent

<MudTextField @ref="reasonInput" @bind-Value="Reason" Label="Reason" Variant="Variant.Outlined"></MudTextField>
<MudButton Class="mt-4 one-third-width" Variant="Variant.Filled" Color="Color.Primary" OnClick="Update">
    @Localizer.Get(SubmitButtonMessage)
</MudButton>

@code {
    [Inject]
    IParticipationBehind _participationBehind { get; set; } = default!;

    private MudTextField<string?> reasonInput = default!;
    public string? Reason { get; set; } = null;
    private string SubmitButtonMessage = "";
    [Parameter]
    public bool RevokedQualification { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await Observe(_participationBehind);
    }

    protected override void OnParametersSet()
    {
        var data = _participationBehind.GetFormData();
        Debug.WriteLine("Ruckai ruckai");
    }

    public async Task Update()
    {
        Participation? participation = _participationBehind.SelectedParticipation;
        var reason = participation?.NotQualified?.Complement;
        var tandemNumber = participation!.Tandem.Number;
        await _participationBehind.RevokeQualification(tandemNumber, QualificationRevokeType.FinishNotRanked, reason);
    }
}
