@page "/event-demo"
@using NTS.Domain.Objects
@using Not.Events;
@using NTS.Domain.Watcher.Entities;
@using NTS.Domain.Watcher.Objects;

@inject IEventManager<RfidTagCoreEvent> _event;

<h1>Events demo</h1>

<MudButton Color="Color.Primary" @onclick="_ => this.Emit()">Emit</MudButton>
<p>Event result: @this.result</p>



@code {
    private string? result;

    protected override void OnInitialized()
    {
        this.Subscribe();
    }

    private void Emit()
    {
        var tag = new RfidTag("id", "13", "l");
        var tagEvent = new RfidTagCoreEvent(tag, SnapshotType.Stage, SnapshotMethod.Manual);
        this._event.Emit(tagEvent);
    }

    private void Subscribe()
    {
        this._event.SubscribeAsync(async e =>
        {
            this.result = e.Number.ToString();
            await this.InvokeAsync(this.StateHasChanged);
        });
    }
}