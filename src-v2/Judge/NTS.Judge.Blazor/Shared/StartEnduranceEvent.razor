﻿@using NTS.Domain.Objects
@using NTS.Judge.Blazor.Ports;
@using Not.Blazor.TM
@using Not.Notifier

@inherits NotComponent

<MudStack Class="ma-5">
    <MudButton Color="Color.Primary" Variant="Variant.Filled" Disabled="_enduranceEventStarted" OnClick="Start">@Localizer.Get(connectMessage)</MudButton>
    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="GetStatus">Get Status</MudButton>
    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="Stop">@Localizer.Get("Stop Reading")</MudButton>
</MudStack>

@code {
    [Inject]
    private IRfidTagReaderBehind _reader { get; set; } = default!;
    [Inject]
    private IParticipationBehind _participationBehind { get; set; } = default!;
    private bool _enduranceEventStarted;
    private string connectMessage = "Start Reading";

    public void Start()
    {
        _reader.StartReading();
    }

    public void GetStatus()
    {
        const string messageBegin = "Rfid Device ";
        var disconnectMessage = "not connected";
        var readingMessage = _reader.IsReading() ? "continuosly detecting tags" : "isn't detecting tags";
        if (_reader.IsConnected())
        {
            NotifyHelper.Inform(messageBegin+readingMessage);
        }
        else
        {
            NotifyHelper.Warn(messageBegin+disconnectMessage);
        }
    }

    public void Stop()
    {
        _reader.StopReading();
    }
}