@using NTS.Domain.Core.Entities.ParticipationAggregate
@using NTS.Domain.Setup.Entities
@using NTS.Judge.Blazor.Core.Dash
@using NTS.Judge.Blazor.Core.Dash.Actions
@using NTS.Judge.Blazor.Core.Ports
@using Not.Events
@using Not.Notify

@attribute [Route(DASHBOARD_PAGE)]
@inherits NComponent

<NContent Title="Dashboard" HasContent="_isStarted" EmptyMessage="Event isn't started">
    
    <EmptyContent>
        <InputFile OnChange="ImportEmsData" />
    </EmptyContent>

    <Main>
        <Dashboard />
    </Main>

    <Rightbar>
        <SnapshotPanel Class="mb-2" />

        <InspectionsPanel Class="mb-2" />

        <EliminationsPanel Class="mb-2" />
    </Rightbar>

</NContent>

@code {
    bool _isStarted;

    [Inject]
    ICoreBehind CoreBehind { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        _isStarted = await CoreBehind.IsStarted();
    }

    async Task ImportEmsData(InputFileChangeEventArgs args)
    {
        using var stream = args.File.OpenReadStream();
        using var stringReader = new StreamReader(stream);
        var contents = await stringReader.ReadToEndAsync();
        if (contents == null)
        {
            return;
        }
        await CoreBehind.Import(contents);
    }
}
