@using NTS.Domain.Core.Entities.ParticipationAggregate
@using NTS.Domain.Setup.Entities
@using NTS.Judge.Blazor.Core.Dash
@using NTS.Judge.Blazor.Core.Dash.Actions
@using NTS.Judge.Blazor.Core.Ports
@using Not.Events
@using Not.Notify

@attribute [Route(DASHBOARD_PAGE)]
@inherits NComponent

<NContent Title="Dashboard" HasContent="_participationBehind.Participations.Any()" EmptyMessage="No participations">
    
    <EmptyContent>
        <InputFile OnChange="ImportEmsData" />
    </EmptyContent>

    <Main>
        <DashboardComponent />
    </Main>

    <Rightbar>
        <SnapshotPanel Class="mb-2" />

        <InspectionsPanel Class="mb-2" />

        <EliminationsPanel Class="mb-2" />
    </Rightbar>

</NContent>

@code {
    [Inject]
    private IEmsImportBehind _importBehind { get; set; } = default!;
    [Inject]
    private IParticipationBehind _participationBehind { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await _participationBehind.Initialize();
    }

    private async Task ImportEmsData(InputFileChangeEventArgs args)
    {
        using var stream = args.File.OpenReadStream();
        using var stringReader = new StreamReader(stream);
        var contents = await stringReader.ReadToEndAsync();
        await _importBehind.ImportCore(contents);

        await _participationBehind.Initialize();
    }
}
