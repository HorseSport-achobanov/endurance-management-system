@using Common.Application;
@using Common.Application.CRUD;
@using Common.Domain;
@using Common.Services;
@using Not.Blazor.Forms;

@typeparam T where T : DomainEntity;
@typeparam TModel where TModel : class, new();
@typeparam TForm where TForm : FormContent;
@implements INotCreateDialog<T, TModel>;
@inject IParentBehind<T> _parentBehind;

<InternalCreateDialog T="T" TModel="TModel" TForm="TForm" OnCreate="OnCreate" />

@code {
    [CascadingParameter]
    protected MudDialogInstance Dialog { get; set; } = default!;

    [Parameter]
    public Func<TModel, T> Factory { get; set; } = default!;

    protected async Task OnCreate(TModel model)
    {
        var entity = Factory(model);
        await _parentBehind.Create(entity);
        Dialog.Close(DialogResult.Ok(true));
    }
}