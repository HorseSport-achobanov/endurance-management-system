@using EMS.Domain.Setup.Entities;
@using Common.Application;
@using Common.Domain;
@using Common.Services;
@using EMS.Judge.Setup.Events;
@using EMS.Judge.Setup.Staff;
@using EMS.Judge.UI.Services;
@using Not.Blazor.Dialogs;
@using Common.Application.Behinds;

@inject INotBehindParent<Official> _parentBehind;
@inject NavigationManager _navigation;
@inject INavigationContext _navigationContext;
@inject ILocalizer _localizer;
@inject INotDialogService<Official, OfficialCreateModel, OfficialFields> _notDialogService;

<MudText Typo="Typo.h5">Staff Members</MudText>

<MudTable Items="_parentBehind.Children" Hover="true">
    <HeaderContent>
        <MudTh>Staff</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="Staff">@context</MudTd>
        <MudTd DataLabel="Actions">
            <MudButton Variant="Variant.Outlined"
                        IconSize="Size.Small"
                        StartIcon="@Icons.Material.Filled.Delete"
                        Color="Color.Warning"
                        OnClick="() => _parentBehind.Delete(context)">
                Remove
            </MudButton>

            <MudButton Variant="Variant.Filled"
                        IconSize="Size.Small"
                        StartIcon="@Icons.Material.Filled.Update"
                        Color="Color.Primary" 
                        OnClick="() => this.ToOfficialUpdate(context)">
                Update
            </MudButton>
        </MudTd>
    </RowTemplate>
        
</MudTable>

<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="this.ToOfficialCreateDialog">Add</MudButton>

@code {
    private void ToOfficialUpdate(Official member)
    {
        _navigationContext.OfficialUpdate = member;
        _navigation.NavigateTo($"/staff-member");
    }

    private async Task ToOfficialCreateDialog()
    {
        await _notDialogService.CreateChildEntity(x => new Official(x.Name!, x.Role));
        await InvokeAsync(StateHasChanged);
    }
}
