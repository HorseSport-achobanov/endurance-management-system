@using Common.Domain;
@using Common.Services;

@typeparam T where T : DomainEntity
@inject ILocalizer _localizer;
@inject ICreateChild<T> service;
@inject NavigationManager navigation;

<MudDialog>
    <DialogContent>
        <MudText Typo="Typo.h5">Create Event</MudText>

        <EditForm Model="Model" OnSubmit="this.Submit">
            <DataAnnotationsValidator />

            <MudCard>
                @FormContent;
            </MudCard>
        </EditForm>
    </DialogContent>

    <DialogActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="this.Submit">
            @_localizer.Get("Create");
        </MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private MudDialogInstance dialog { get; set; } = default!;
    [Parameter]
    public object Model { get; set; } = default!;
    [Parameter]
    public Func<T> Factory { get; set; } = default!;
    [Parameter]
    public RenderFragment FormContent { get; set; } = default!;

    private async Task Submit()
    {
        var entity = Factory();
        await this.service.Add(entity);
        this.dialog.Close(DialogResult.Ok(true));
    }
}