@using Common.Application.Behinds;
@using Common.Domain;
@using Common.Helpers
@using EMS.Domain.Setup.Entities;
@using EMS.Judge.Setup.Events;
@using EMS.Judge.UI.Pages.Setup.Events
@using EMS.Judge.UI.Pages.Setup.Officials
@using Not.Blazor.Dialogs;
@using Not.Blazor.TM.Forms;

@inject INotDialogService<Event, EventFields> _notDialogService;
@inject INotBehind<Event> _behind;

<NotUpdate T="Event" TForm="EventFields" Entity="_event" UpdateAction="_behind.Update" />

<MudPaper>
    <OfficialList />
</MudPaper>

@code {
    private Event _event = default!;

    protected override async Task OnInitializedAsync()
    {
        var entity = await _behind.Read(default);
        if (entity == null)
        {
            throw ThrowHelper.Exception($"Event cannot be null here");
        }
        _event = entity;
    }
}