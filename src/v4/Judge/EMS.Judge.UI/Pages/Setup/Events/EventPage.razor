@using Common.Application.Behinds;
@using Common.Domain;
@using Common.Helpers
@using EMS.Domain.Setup.Entities;
@using EMS.Judge.Setup.Events;
@using EMS.Judge.UI.Pages.Setup.Events
@using EMS.Judge.UI.Pages.Setup.Officials
@using Not.Blazor.Dialogs;
@using Not.Blazor.Forms;

@inherits UpdatePage<Event>

@inject INotDialogService<Event, EventFields> _notDialogService;
@inject INotBehind<Event> _behind;

<EditForm Model="_model">
    <DataAnnotationsValidator />

    <MudCard>
        <EventFields Model="_model" @ref="Fields" />
    </MudCard>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="TryUpdate">Update</MudButton>
</EditForm>

<MudPaper>
    <OfficialList />
</MudPaper>

@code {
    private EventFieldsModel _model = default!;

    protected override async Task OnInitializedAsync()
    {
        var entity = await _behind.Read(default);
        if (entity == null)
        {
            throw ThrowHelper.Exception($"Event cannot be null here");
        }
        _model = new(entity);
    }

    protected override async Task Update()
    {
        var entity = Fields!.SubmitUpdate();
        await _behind.Update(entity);
    }
}