@using Common.Domain;
@using EMS.Domain.Objects;
@using EMS.Domain.Setup.Entities;
@using EMS.Judge.Setup;
@using EMS.Judge.Setup.Events;
@using EMS.Judge.UI.Contexts;
@using EMS.Judge.UI.Pages.Setup.StaffMembers;
@inject IDialogService dialogService;
@inject IUpdateEvent service;
@inject ICountriesContext context;

@if (this.service.UpdateModel == null)
{
    <MudPaper>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="this.RenderEventCreateDialog">Create</MudButton>
    </MudPaper>
}
else
{
    <MudPaper>
        <MudTextField Label="Place" @bind-Value="this.service.UpdateModel.Place" />

        <MudAutocomplete Label="Country"
            T="Country"
            CoerceText="true"
            @bind-Value="this.service.UpdateModel.Country"
            SearchFunc="@this.context.Search" />

        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="this.service.Update">
            Create
        </MudButton>

    </MudPaper>

    <MudPaper>
        <StaffMemberList />
    </MudPaper>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await this.service.Read(default);
    }

    private async Task RenderEventCreateDialog()
    {
        var dialog = this.dialogService.Show<EventCreateDialog>();
        await dialog.Result;
        await this.OnInitializedAsync();
    }
}