@using NTS.Domain.Setup.Entities;
@using NTS.Judge.Blazor.Setup.StaffMembers;
@using Not.Blazor.Forms;
@using Not.Blazor.TM.Forms;
@using Not.Blazor.TM.Forms.Components;

@inherits NotForm<Official>;

<EditForm Model="_model">
    <DataAnnotationsValidator />

    <MudCard>
        <MudCardContent>
            <MudTextField Label="Place" @ref="_nameField" @bind-Value="_model.Name" For="@(() => _model.Name)" />
        </MudCardContent>

        <MudCardContent>
            <MudSelect Label="Role" @ref="_roleFiled" @bind-Value="_model.Role">
                @foreach (var item in Enum.GetValues<OfficialRole>())
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
        </MudCardContent>
    </MudCard>
</EditForm>


@code {
    private MudTextField<string?> _nameField = default!;
    private MudSelect<OfficialRole> _roleFiled = default!;
    private OfficialFieldsModel _model { get; set; } = new();

    public override void RegisterValidationInjectors()
    {
        RegisterInjector(nameof(_model.Name), () => _nameField);
        RegisterInjector(nameof(_model.Role), () => _roleFiled);
    }

    public override void SetUpdateModel(Official official)
    {
        _model = new OfficialFieldsModel(official);
    }

    public override Official SubmitCreate()
    {
        return new Official(_model.Name!, _model.Role);
    }

    public override Official SubmitUpdate()
    {
        return Official.Update(_model.Id!.Value, _model.Name!, _model.Role);
    }
}
