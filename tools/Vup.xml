<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Vup</name>
    </assembly>
    <members>
        <member name="T:Vup.reader.IBat2000ModuleRs232">
            <summary>
                ibat2000模块客户端
            </summary>
        </member>
        <member name="F:Vup.reader.AutoReadOutput.TagType">
            <summary>
                标签的类型。1--6C,2--6B/The type of the tag. 1--6C,2--6B
            </summary>
        </member>
        <member name="F:Vup.reader.memory_bank.memory_bank_password">
            密码区/password
        </member>
        <member name="F:Vup.reader.memory_bank.memory_bank_epc">
            EPC
        </member>
        <member name="F:Vup.reader.memory_bank.memory_bank_tid">
            TID
        </member>
        <member name="F:Vup.reader.memory_bank.memory_bank_user">
            USER
        </member>
        <member name="F:Vup.reader.tag_type.tag6c">
            6c
        </member>
        <member name="F:Vup.reader.tag_type.tag6b">
            6b
        </member>
        <member name="F:Vup.reader.hf_tag.uid_len">
            uid length
        </member>
        <member name="F:Vup.reader.hf_tag.tagType">
            tag type
        </member>
        <member name="F:Vup.reader.auto_read_output.ant">
            天线号/Antenna NO
        </member>
        <member name="F:Vup.reader.auto_read_output.fin_count">
            被触发的触发器数量/Number of triggers
        </member>
        <member name="F:Vup.reader.auto_read_output.ip">
            读写器的IP地址/The IP address of the reader
        </member>
        <member name="F:Vup.reader.auto_read_output.epc">
            EPC
        </member>
        <member name="F:Vup.reader.auto_read_output.tid">
            TID
        </member>
        <member name="F:Vup.reader.auto_read_output.user">
            USER
        </member>
        <member name="F:Vup.reader.auto_read_output.id">
            读写器的设备ID//The device ID of the reader
        </member>
        <member name="F:Vup.reader.auto_read_output.rssi">
            标签的信号强度/rssi
        </member>
        <member name="F:Vup.reader.auto_read_output.ts">
            识别到该标签的时间戳(unix time)/timestamp
        </member>
        <member name="F:Vup.reader.auto_read_output.tagType">
            标签的类型。1--6C,2--6B/The type of the tag. 1--6C,2--6B
        </member>
        <member name="F:Vup.reader.auto_read_output.custom1">
            用户自定义字段1/User defined field 1
        </member>
        <member name="F:Vup.reader.auto_read_output.custom2">
            用户自定义字段2/User defined field 2
        </member>
        <member name="F:Vup.reader.auto_read_output.custom3">
            用户自定义字段3//User defined field 3
        </member>
        <member name="F:Vup.reader.auto_read_output.custom4">
            用户自定义字段4//User defined field 4
        </member>
        <member name="F:Vup.reader.auto_read_output.custom5">
            用户自定义字段5//User defined field 5
        </member>
        <member name="F:Vup.reader.rfid_device.ip">
            设备IP地址/Device IP address
        </member>
        <member name="F:Vup.reader.rfid_device.port">
            tcp/udp端口/tcp/udp port
        </member>
        <member name="F:Vup.reader.rfid_device.model">
            读写器型号/Reader model
        </member>
        <member name="F:Vup.reader.rfid_device.id">
            读写器ID/ID
        </member>
        <member name="F:Vup.reader.rfid_device.rs485_address">
            485地址/rs485 address
        </member>
        <member name="F:Vup.reader.rfid_device.rs485_baud">
            485波特率/rs485 baud rate
        </member>
        <member name="M:Vup.reader.rfid_device.toPublic">
            <summary>
            should call before free
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vup.reader.RfidDevice">
            <summary>
            
            </summary>
        </member>
        <member name="F:Vup.reader.RfidDevice.ip">
            设备IP地址/Device IP address
        </member>
        <member name="F:Vup.reader.RfidDevice.port">
            tcp/udp端口/tcp/udp port
        </member>
        <member name="F:Vup.reader.RfidDevice.model">
            读写器型号/Reader model
        </member>
        <member name="F:Vup.reader.RfidDevice.id">
            读写器ID/ID
        </member>
        <member name="F:Vup.reader.RfidDevice.rs485_address">
            485地址/rs485 address
        </member>
        <member name="F:Vup.reader.RfidDevice.rs485_baud">
            485波特率/rs485 baud rate
        </member>
        <member name="M:Vup.reader.P32netReader.#ctor(System.String,System.Int32,Vup.reader.transport_protocol)">
            <summary>
            
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="protocol"></param>
        </member>
        <member name="M:Vup.reader.P32netReader.DoConnect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VD67Reader.DoConnect">
            <summary>
            USB连接
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vup.reader.VupReader">
            <summary>
            
            </summary>
        </member>
        <member name="F:Vup.reader.VupReader.DeviceType">
            <summary>
            device type
            </summary>
        </member>
        <member name="F:Vup.reader.VupReader.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Vup.reader.VupReader.IsConnected">
            <summary>
            
            </summary>
        </member>
        <member name="M:Vup.reader.VupReader.Connect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.DoConnect">
            <summary>
            do real connection
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.Disconnect">
            <summary>
            
            </summary>
        </member>
        <member name="M:Vup.reader.VupReader.SetAntPower(System.Int32,System.Int32)">
            <summary>
                设置天线功率
            </summary>
            <param name="antNo">天线号，从1开始</param>
            <param name="power">功率</param>
        </member>
        <member name="M:Vup.reader.VupReader.GetAntPower(System.Int32)">
            <summary>
            
            </summary>
            <param name="antNo"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.SetWorkMode(Vup.reader.work_mode)">
            <summary>
            
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.SetWorkAnt(System.Int32)">
            <summary>
            
            </summary>
            <param name="ant"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.GetAntCount">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.GetWorkMode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.ListenAutoOutput(Vup.reader.AutoOutputDelegate)">
            <summary>
            
            </summary>
            <param name="callback"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.StopListenAutoOutput">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.Read6C(Vup.reader.memory_bank,System.Int32,System.Int32,System.Byte[],System.Byte[])">
            <summary>
                读6c标签
            </summary>
            <param name="memory">数据区</param>
            <param name="addr">起始地址</param>
            <param name="l">读取数据长度，单位字节</param>
            <param name="epc">epc</param>
            <param name="password">访问密码</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.Write6C(Vup.reader.memory_bank,System.Int32,System.Byte[],System.Byte[],System.Byte[])">
            <summary>
                写6C标签
            </summary>
            <param name="memory"></param>
            <param name="addr"></param>
            <param name="epc"></param>
            <param name="data"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.List6C(Vup.reader.memory_bank,System.Int32,System.Int32,System.Byte[])">
            <summary>
                列出附近标签
            </summary>
            <param name="memory">memory为epc时，addr和len参数无效，直接返回epc号</param>
            <param name="addr">起始地址</param>
            <param name="len"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.Reboot">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.QuickWriteEpc(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            
            </summary>
            <param name="oldEpc"></param>
            <param name="newEpc"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfListTag">
            <summary>
            列出天线识别范围内的高频标签
            </summary>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfRead15693Block(System.Byte[],System.Int32,System.Int32)">
            <summary>
            读15693标签数据块，一个数据块为4个字节。
            </summary>
            <param name="uid">标签UID</param>
            <param name="address">从哪一个数据块开始读，0开始编号。</param>
            <param name="blockCount">读数据块的数量。</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfRead15693Block(System.String,System.Int32,System.Int32)">
            <summary>
            读15693标签数据块，一个数据块为4个字节。
            </summary>
            <param name="uid">uid16进制字符串形式</param>
            <param name="address"></param>
            <param name="blockCount"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfRead15693(System.String,System.Int32,System.Int32)">
            <summary>
            一次性读取一定长度的数据
            </summary>
            <param name="uid">uid16进制字符串形式</param>
            <param name="address"></param>
            <param name="dataLen">读取数据长度</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfRead15693(System.Byte[],System.Int32,System.Int32)">
            <summary>
            一次性读取一定长度的数据
            </summary>
            <param name="uid">uid</param>
            <param name="address"></param>
            <param name="dataLen">读取数据长度</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfWrite15693Block(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            写15693标签数据块，一个数据块为4个字节。
            </summary>
            <param name="uid">标签UID</param>
            <param name="address">写入数据块地址</param>
            <param name="data">写入数据</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfWrite15693Block(System.String,System.Int32,System.Byte[])">
            <summary>
            写15693标签数据块，一个数据块为4个字节。
            </summary>
            <param name="uid">uid16进制字符串形式</param>
            <param name="address"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfWrite15693Block(System.String,System.Int32,System.String)">
            <summary>
            写15693标签数据块，一个数据块为4个字节。
            </summary>
            <param name="uid">uid16进制字符串形式</param>
            <param name="address"></param>
            <param name="data">待写入数据16进制标识形式</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfWrite15693(System.String,System.Int32,System.String)">
            <summary>
            一次性写入一定长度的数据
            </summary>
            <param name="uid">uid16进制字符串形式</param>
            <param name="address"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfWrite15693(System.String,System.Int32,System.Byte[])">
            <summary>
            一次性写入一定长度的数据
            </summary>
            <param name="uid">uid16进制字符串形式</param>
            <param name="address"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfRead14443Block(System.Byte[],System.Int32,System.Int32)">
            <summary>
            读14443A标签数据块，一个数据块为4个字节。最多一次读取16个字节的数据。
            </summary>
            <param name="uid">uid</param>
            <param name="address">从哪一个数据块开始读，0开始编号</param>
            <param name="blockCount">读取数据块的数量n，n小于等于4</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfWrite14443Block(System.Byte[],System.Int32,System.Byte[])">
            <summary>
            写14443A标签数据块，一个数据块为4个字节。需要注意的是，并不是所有的标签芯片区域都是可写的，
            例如对于NAT213芯片而言，第0-3块是芯片的出厂参数，那这些区域就是不可写的。
            </summary>
            <param name="uid">uid</param>
            <param name="address">写入数据块地址</param>
            <param name="data">4个字节写入数据</param>
            <returns>ddd</returns>
        </member>
        <member name="M:Vup.reader.VupReader.HfSelect14443Fan(System.Byte[],System.Int32)">
            <summary>
            选择14443A标签扇区
            </summary>
            
            <param name="uid">uid</param>
            <param name="fan">扇区编号</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.GetRelayStatus(System.Int32)">
            <summary>
            获取继电器状态
            </summary>
            <param name="relay">继电器编号</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.SetRelayStatus(System.Int32,Vup.reader.relay_status)">
            <summary>
             设置继电器状态
            </summary>
            <param name="relay">继电器编号</param>
            <param name="status">继电器状态</param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.GetGpiStatus(System.Int32)">
            <summary>
            获取gpi状态
            </summary>
            <param name="gpi"></param>
            <returns>0 低电平 1 高电平</returns>
        </member>
        <member name="M:Vup.reader.VupReader.SetLogLevel(System.Int32)">
            <summary>
            0-panic 1-fatal 2-error 3-warn 4-info 5-debug 6-trace default-info
            </summary>
        </member>
        <member name="M:Vup.reader.VupReader.SetLogFilePath(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Vup.reader.VupReader.ErrDescription(System.Int32)">
            <summary>
            错误描述
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.reader.VupReader.StartScan(Vup.reader.OnDeviceScan)">
            <summary>
            开始搜索网内读写器
            </summary>
            <param name="cb"></param>
        </member>
        <member name="M:Vup.reader.VupReader.StopScan">
            <summary>
            停止搜索设备
            </summary>
        </member>
        <member name="M:Vup.reader.VupReader.IsR2000Reader(Vup.reader.VupReader)">
            <summary>
            check the reader whether is r2000 reader
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="T:Vup.R2000ModuleTcp">
            <summary>
            
            </summary>
        </member>
        <member name="M:Vup.R2000ModuleTcp.DoConnect">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vup.R2000ModuleUdp">
            <summary>
            r2000 udp client
            </summary>
        </member>
        <member name="M:Vup.R2000ModuleUdp.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            R2000ModuleUdp
            </summary>
            <param name="ip">ip address</param>
            <param name="port">port</param>
            <param name="deviceType">device type</param>
        </member>
        <member name="M:Vup.R2000ModuleUdp.DoConnect">
            <summary>
             r2000 module connection using tcp/udp
            </summary>
            <returns></returns>
        </member>
        <member name="T:Vup.utils.C">
            <summary>
            for c 
            </summary>
        </member>
        <member name="M:Vup.utils.C.ZeroEndCCharArrayToString(System.Char[])">
            <summary>
                将0结尾的c字符数组转成c#字符串
            </summary>
            <param name="zeroEndArray"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.utils.C.removeTailZero(System.Byte[])">
            <summary>
            remote all tail zero
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="T:Vup.utils.TextUtil">
            <summary>
             text util class
            </summary>
        </member>
        <member name="M:Vup.utils.TextUtil.HexStringToBytes(System.String)">
            <summary>
            16进制字符串转成byte数组
            </summary>
            <param name="hex"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.utils.TextUtil.BytesToHexString(System.Byte[])">
            <summary>
            byte数组转成16进制字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:Vup.utils.TextUtil.BytesToHexString(System.Byte[],System.Int32)">
            <summary>
            byte数组从开始到一定长度转成16进制字符串
            </summary>
            <param name="bytes"></param>
            <param name="len"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:StringExtension">
            <summary>
            string extension class
            </summary>
        </member>
        <member name="M:StringExtension.Repeat(System.String,System.Int32)">
            <summary>
            重复字符串
            </summary>
            <param name="s"></param>
            <param name="repeatCount"></param>
            <returns></returns>
        </member>
    </members>
</doc>
